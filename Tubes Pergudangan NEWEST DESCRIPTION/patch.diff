{
        Schema::create('jobs', function (Blueprint $table) {
            $table->id();
            $table->string('queue')->index();
            $table->longText('payload');
            $table->unsignedTinyInteger('attempts');
            $table->unsignedInteger('reserved_at')->nullable();
            $table->unsignedInteger('available_at');
            $table->unsignedInteger('created_at');
        });

        Schema::create('job_batches', function (Blueprint $table) {
            $table->string('id')->primary();
            $table->string('name');
            $table->integer('total_jobs');
            $table->integer('pending_jobs');
            $table->integer('failed_jobs');
            $table->longText('failed_job_ids');
            $table->mediumText('options')->nullable();
            $table->integer('cancelled_at')->nullable();
            $table->integer('created_at');
            $table->integer('finished_at')->nullable();
        });

        Schema::create('failed_jobs', function (Blueprint $table) {
            $table->id();
            $table->string('uuid')->unique();
            $table->text('connection');
            $table->text('queue');
            $table->longText('payload');
            $table->longText('exception');
            $table->timestamp('failed_at')->useCurrent();
        });
    }
=======
    public function up(): void
    {
        // Membuat tabel 'jobs' untuk menyimpan antrian pekerjaan
        Schema::create('jobs', function (Blueprint $table) {
            $table->id(); // Kolom id sebagai primary key auto increment
            $table->string('queue')->index(); // Nama antrian, diindeks untuk pencarian cepat
            $table->longText('payload'); // Data pekerjaan dalam format teks panjang
            $table->unsignedTinyInteger('attempts'); // Jumlah percobaan eksekusi pekerjaan
            $table->unsignedInteger('reserved_at')->nullable(); // Waktu pekerjaan dipesan, nullable
            $table->unsignedInteger('available_at'); // Waktu pekerjaan tersedia untuk diproses
            $table->unsignedInteger('created_at'); // Waktu pembuatan pekerjaan
        });

        // Membuat tabel 'job_batches' untuk mengelola batch pekerjaan
        Schema::create('job_batches', function (Blueprint $table) {
            $table->string('id')->primary(); // ID batch sebagai primary key string
            $table->string('name'); // Nama batch pekerjaan
            $table->integer('total_jobs'); // Total pekerjaan dalam batch
            $table->integer('pending_jobs'); // Jumlah pekerjaan yang belum selesai
            $table->integer('failed_jobs'); // Jumlah pekerjaan yang gagal
            $table->longText('failed_job_ids'); // Daftar ID pekerjaan yang gagal dalam batch
            $table->mediumText('options')->nullable(); // Opsi tambahan, nullable
            $table->integer('cancelled_at')->nullable(); // Waktu batch dibatalkan, nullable
            $table->integer('created_at'); // Waktu pembuatan batch
            $table->integer('finished_at')->nullable(); // Waktu batch selesai, nullable
        });

        // Membuat tabel 'failed_jobs' untuk menyimpan pekerjaan yang gagal
        Schema::create('failed_jobs', function (Blueprint $table) {
            $table->id(); // Kolom id sebagai primary key auto increment
            $table->string('uuid')->unique(); // UUID unik untuk setiap pekerjaan gagal
            $table->text('connection'); // Koneksi database atau queue yang digunakan
            $table->text('queue'); // Nama antrian pekerjaan
            $table->longText('payload'); // Data pekerjaan yang gagal
            $table->longText('exception'); // Pesan error atau exception yang terjadi
            $table->timestamp('failed_at')->useCurrent(); // Timestamp saat pekerjaan gagal, default current timestamp
        });
    }
>>>>>>> REPLACE

<<<<<<< SEARCH
    public function down(): void
    {
        Schema::dropIfExists('jobs');
        Schema::dropIfExists('job_batches');
        Schema::dropIfExists('failed_jobs');
    }
=======
    public function down(): void
    {
        // Menghapus tabel 'jobs' jika rollback migrasi
        Schema::dropIfExists('jobs');
        // Menghapus tabel 'job_batches' jika rollback migrasi
        Schema::dropIfExists('job_batches');
        // Menghapus tabel 'failed_jobs' jika rollback migrasi
        Schema::dropIfExists('failed_jobs');
    }
